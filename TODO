--------------------------------------------------------------------------------------------------

- Engine Stuff
	- jbDE - WIP - Will replace NQADE
		- Converting to Vulkan - a little further out
			- Hardware Raytracing Experimentation, not possible with OpenGL
		- Adding some kind of thing where projects inherit from a base engine class
			- This will be a new engine, jbDE, the jb Demo Engine - but much carried forward from NQADE
				- All projects will be kept in the same repo, build script generates separate executables
		- Need to work on figuring out how projects will inherit from the base engine class
		- Once I get to that point, I will be able to maintain the projects automagically
			- Vertexture
			- SoftBodies
			- Voraldo
			- Siren
			- SDFs - SDF validation tool for the DEC
	- Dithering stuff
		- Precomputed 3d LUT texture in order to avoid having to do the distance calculations
		- Probably make this built-in functionality in the engine
	- Deterministic RNG for the CPU - need deterministic alternative to std::random
		- start with Wang Hash
		- other methods? linear congruential, others? Is a mersene twister implementation practical?
		- remapping functions
	- Append glyphs to model
	- Append palettes to lospec list ( label, contents )

--------------------------------------------------------------------------------------------------

- Plans for Voraldo14
	- Operation Scripting and Logging - Needs a ground-up redesign
		- Logging needs seeding for RNG resources so scripting operations can be deterministic
		- Scripting needs to be able to control everything
			- Rendering parameters
				- Camera type, position, orientation
			- Drawing operations
			- Lighting operations
	- Is it practical to try to do fully-jsonified parameters, menus, etc?
		- Operations are executed based on label
		- Menu layout based on labels and ranges
	- Spaceship Generator reimpl
		- Use of std::unordered_map is good, I like this
			- std::unordered_map< glm::ivec3, glm::vec4 >
				- ivec3 keys for easy negative indexing, vec4 contents for color and opacity
			- Potential for writing my own hashmap, but honestly I'm not seeing a huge need to do so
		- Using new glyph and palette resources
			- Abandoning the hoard-of-bitfonts fork
				- fontmess is the new one, with the simple pipeline for parsing etc
		- Palette Options - I want to make this a lot more flexible
			- simple palette from the lospec set
			- interpolated lospec set
			- iq-style sinusoid palettes
			- simple gradients between two ( or more ) colors
			- heatmap gradient
			- color temperature sweep
		- Are there any more operations I can add?
			- Currently:
				- Ones that do not require new map
					- Get Bounding Box
						- Walk the entire map, find minimum and maximum occupied voxels on each axis
					- Stamp Random Glyphs
						- Pick random glyphs and put them into the map at random location
				- Ones that do require new map ( corruption happens if you reuse the same map over again )
					- Square Model
						- Get the bounding box, then create a new map, translating the old map to have only positive contents
					- Flip
						- invert orientation on some axis
					- Shave
						- get the bounding box, then remove all entries that are greater/less than some threshold on a random axis
					- Mirror
						- copy contents across some axis - bounding box value for that axis minus the coordinate
				- More?
			- Blacklisting certain glyphs - hard to go through the full set, 140k is a lot to work with
				- Only include english characters, only include foreign characters, only include pictograms? something like that
				- Make sure we have unique IDs, and Black/Whitelist certain IDs
					- How do we maintain this if more glyphs get added? ( append only? probably best solution )
	- Render mode control
		- Different cameras
			- Joukowsky transform https://www.shadertoy.com/view/tsdyWM
			- Fisheye https://www.shadertoy.com/view/3sSfDz
			- Panoramic projection https://www.shadertoy.com/view/clB3Rz
			- Icosahedral https://www.shadertoy.com/view/4dSyWh
			- Wrighter's Spherical https://www.shadertoy.com/view/WlfyRs
		- different traversal methods
			- https://www.cse.chalmers.se/edu/year/2011/course/TDA361/grid.pdf
	- Stuff from Voraldo13
		- Different types of screenshot utilities ( lower priority )
			- Accumulator
			- After postprocessing
			- Directly from framebuffer
	- Normal vectors derived from alpha channel gradient ( similar to SDF normal )

--------------------------------------------------------------------------------------------------

- Siren Plans
	- Need to refit refraction, try this with explicit primitives
	- Abstract camera projections - see above, "Different cameras"

--------------------------------------------------------------------------------------------------

- DEC plans ( website )
	- Operators section
	- 2D section

- Articles - Keeping up with projects as they happen, so they don't pile up again
	- currently none pending

--------------------------------------------------------------------------------------------------

- Concrete Future Project Ideas
	- Reimplementation of the VIVS V8 Engine Animation as a Raymarching Demo ( likely on Shadertoy )
	- Visible Human Data Resampling - MIP chain + 3d sampling
		- Generate mip chain from original data, allow for arbitrary resampling at arbitrary scales
	- SoftBodies2
		- Support larger models - currently nowhere near the cap on the current single thread impl
			- Consider learning how to use mutexes to make the multithreaded version practical?
			- I think it will work well on the GPU
		- I want to change the way the tension / compression coloring is done
			- Instead of just hard cut red to blue, I want to fade, through white at neutral
		- Simple cloth sim
			- SDF intersection? Sphere comes in and affects the sim nodes
			- Noise based perturbation, like wind
		- Higher order solver? I think that there's some potential value there

--------------------------------------------------------------------------------------------------

- More Vague Future Project Ideas
	- Glitch effects using the bitfontCore2 bit masks
	- Better pixel sorting, add thresholding stuff
	- Fluid Simulation
		- https://github.com/InteractiveComputerGraphics/SPlisHSPlasH
	- 3D version of Physarum Simulation
		- I think there's a lot more cool stuff I can do with the physarum thing
	- More Advanced Optics Simulation
		- need to look at explicit primitives for lens shapes, SDF lens shapes are problematic
	- Experimenting with TinyGLTF and loading of the Intel Sponza models
		- Got to try shadowmapping at some point
		- Normal mapping is cool as shit
	- Engine and Suspension Simulation - voxels for center of mass calculation
		- Interactive driving thing?
		- visualize the inside of the cylinder using backface culling, like that one thing I wanted to do with the house walls
			- only interior surface of walls will show, because the backface is facing the exterior side - I think it's a valid technique
	- IFS stuff - Nameless wants to do some stuff with this, too - would be cool to collaborate
		- probabalistic picking of transforms, points in compute shaders
			- https://flam3.com/flame_draves.pdf
			- https://www.cs.uaf.edu/~olawlor/papers/2011/ifs/lawlor_ifs_2011.pdf
	- Tree growing stuff
		- https://courses.cs.duke.edu/cps124/spring08/assign/07_papers/p119-weber.pdf
		- http://algorithmicbotany.org/papers/selforg.sig2009.small.pdf
	- Bokeh LUT ( Pencil Map ) - how to apply this?
		- https://www.siliconstudio.co.jp/rd/presentations/files/siggraph2015/06_MakingYourBokehFascinating_S2015_Kawase_EN.pdf
	- Tonemapping/color stuff
		- Path-to-White tonemapping curves
			- https://github.com/tizian/tonemapper
			- https://chrisbrejon.com/articles/ocio-display-transforms-and-misconceptions/
		- General Color
			- http://poynton.ca/notes/colour_and_gamma/ColorFAQ.html

--------------------------------------------------------------------------------------------------